{"ast":null,"code":"var _jsxFileName = \"D:\\\\react_apps\\\\noteapp\\\\project2\\\\src\\\\components\\\\NoteList.js\",\n  _s = $RefreshSig$();\n// NoteList.js\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Note from './Note';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction NoteList() {\n  _s();\n  const [notes, setNotes] = useState([]);\n  useEffect(() => {\n    const fetchNotes = async () => {\n      try {\n        const response = await axios.get('/notestable');\n        if (response.status === 200) {\n          setNotes(response.data);\n        }\n      } catch (error) {\n        console.error('Error:', error);\n      }\n    };\n    fetchNotes();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: notes.map(note => /*#__PURE__*/_jsxDEV(Note, {\n      text: note.text\n    }, note.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n_s(NoteList, \"vOaC7rmji7ux6HtcIeocV+tl1oY=\");\n_c = NoteList;\nexport default NoteList;\nvar _c;\n$RefreshReg$(_c, \"NoteList\");","map":{"version":3,"names":["React","useState","useEffect","axios","Note","jsxDEV","_jsxDEV","NoteList","_s","notes","setNotes","fetchNotes","response","get","status","data","error","console","children","map","note","text","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/react_apps/noteapp/project2/src/components/NoteList.js"],"sourcesContent":["// NoteList.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport Note from './Note';\r\n\r\nfunction NoteList() {\r\n  const [notes, setNotes] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchNotes = async () => {\r\n      try {\r\n        const response = await axios.get('/notestable');\r\n        if (response.status === 200) {\r\n          setNotes(response.data);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error:', error);\r\n      }\r\n    };\r\n    fetchNotes();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      {notes.map((note) => (\r\n        <Note key={note.id} text={note.text} />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NoteList;\r\n\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACd,MAAMS,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMT,KAAK,CAACU,GAAG,CAAC,aAAa,CAAC;QAC/C,IAAID,QAAQ,CAACE,MAAM,KAAK,GAAG,EAAE;UAC3BJ,QAAQ,CAACE,QAAQ,CAACG,IAAI,CAAC;QACzB;MACF,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;MAChC;IACF,CAAC;IACDL,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEL,OAAA;IAAAY,QAAA,EACGT,KAAK,CAACU,GAAG,CAAEC,IAAI,iBACdd,OAAA,CAACF,IAAI;MAAeiB,IAAI,EAAED,IAAI,CAACC;IAAK,GAAzBD,IAAI,CAACE,EAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAoB,CACvC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAAClB,EAAA,CAxBQD,QAAQ;AAAAoB,EAAA,GAARpB,QAAQ;AA0BjB,eAAeA,QAAQ;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}